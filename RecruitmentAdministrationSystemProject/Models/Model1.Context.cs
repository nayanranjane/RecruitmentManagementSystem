//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RecruitmentAdministrationSystemProject.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RecruitmentManagementSystemEntities : DbContext
    {
        public RecruitmentManagementSystemEntities()
            : base("name=RecruitmentManagementSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AptitudeAnswer> AptitudeAnswers { get; set; }
        public virtual DbSet<AptitudeQuestion> AptitudeQuestions { get; set; }
        public virtual DbSet<CandidateInfo> CandidateInfoes { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Interview> Interviews { get; set; }
        public virtual DbSet<JobApplication> JobApplications { get; set; }
        public virtual DbSet<JobPost> JobPosts { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Skill> Skills { get; set; }
        public virtual DbSet<Staff> Staffs { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<sp_AuthenticateStaff_Result> sp_AuthenticateStaff(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AuthenticateStaff_Result>("sp_AuthenticateStaff", companyIdParameter);
        }
    
        public virtual ObjectResult<sp_MyAuthenticatedStaff_Result> sp_MyAuthenticatedStaff(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MyAuthenticatedStaff_Result>("sp_MyAuthenticatedStaff", companyIdParameter);
        }
    
        public virtual ObjectResult<sp_ApplicationDetails_Result> sp_ApplicationDetails(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ApplicationDetails_Result>("sp_ApplicationDetails", userIdParameter);
        }
    }
}
