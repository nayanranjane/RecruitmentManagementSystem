@model RecruitmentAdministrationSystemProject.Models.Interview

@{
    ViewBag.Title = "Remark";
}

<header>
   
    <link href="~/Content/SignIn.css" rel="stylesheet" />
</header>

<body>
    <div class="main">
        <div class="register">
            <h2>Register Here</h2>
            @using (Html.BeginForm("Remark", "Interview", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="singup-form">
                    <div>
                        <label for="Name">Name</label>
                        <div class="input-container">
                            @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-white" })
                        </div>
                    </div>
                    <div>
                        <label for="Name">Status</label>
                        <div class="input-container">
                            @Html.DropDownListFor(model=>model.StatusId, new List<SelectListItem>{new SelectListItem{ Text="Selected", Value="Selected"},new SelectListItem{ Text="Rejected", Value="Rejected"}}, "-Select Status-", new {@class="SelectList"})
                            @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-white" })

                        </div>
                    </div>
                    <div class="">
                        <div class="form-group">
                            @Html.LabelFor(model => model.StaffID, "StaffID", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.StaffID, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StaffID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MettingId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.MettingId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MettingId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.InterviewDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.InterviewDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.InterviewDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.InterviewTime, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.InterviewTime, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.InterviewTime, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.InterviewID, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.InterviewID, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.InterviewID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                   
                </div>
                <div class="submit-btn-container">
                    <input type="submit" value="Submit" name="submit" id="submit" />
                </div>
            }

        </div>
    </div>
</body>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
