@model RecruitmentAdministrationSystemProject.Models.JobPost

@{
    ViewBag.Title = "Create";
}
<header>
    <link href="~/Content/Application.css" rel="stylesheet"/>
</header>


<body>
    <div class="main">
        <div class="register">
            <h2>Create Post</h2>
            @using (Html.BeginForm("Create", "JobPosts", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="singup-form">
                    <div class="hiddenContent">
                        <label for="Name">CompanyId</label>
                        <div class="input-container">
                            @Html.EditorFor(model => model.CompanyID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div>
                        <label for="Name">Title</label>
                        <div class="input-container">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div>
                        <label for="Name">CTC</label>
                        <div class="input-container">
                            @Html.EditorFor(model => model.CTC, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CTC, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div>
                        <label for="Name">No of Opening </label>
                        <div class="input-container">

                            @Html.EditorFor(model => model.NoOfOpening, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NoOfOpening, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="selectLocation">
                        <label for="Name">Location</label>
                        <div class="input-container">
                            @Html.DropDownListFor(model => model.Location, new SelectList(ViewBag.location, "Name", "Name"), "Select Location", new { @class = "form-control selectlist" })
                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="hiddenContent">
                        <label for="Name">Post Date</label>
                        <div class="input-container">
                            @Html.EditorFor(model => model.PostDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PostDate, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div>
                        <label for="Name">Last Date</label>
                        <div class="input-container">
                            @Html.EditorFor(model => model.LastDate, new { htmlAttributes = new { @class = "form-control" ,@type="time" } })
                            @Html.ValidationMessageFor(model => model.LastDate, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="selectlist">
                        <label for="Name">Skill 1</label>
                        <div class="input-container">

                            @Html.DropDownListFor(model => model.Skill_1, new SelectList(ViewBag.Skills, "SkillName", "SkillName"), "Select skills", new { @class = "form-control selectlist" })
                            @Html.ValidationMessageFor(model => model.Skill_1, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="selectlist">
                        <label for="Name">Skill 2</label>
                        <div class="input-container">
                            @Html.DropDownListFor(model => model.Skill_2, new SelectList(ViewBag.Skills, "SkillName", "SkillName"), "Select skills", new { @class = "form-control selectlist" })
                            @Html.ValidationMessageFor(model => model.Skill_2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="selectlist">
                        <label for="Name">Skill 3</label>
                        <div class="input-container">
                            @Html.DropDownListFor(model => model.Skill_3, new SelectList(ViewBag.Skills, "SkillName", "SkillName"), "Select skills", new { @class = "form-control selectlist" })
                            @Html.ValidationMessageFor(model => model.Skill_3, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div >
                        <label for="Name">Required Batch</label>
                        <div class="input-container">
                            @Html.EditorFor(model => model.RequiredBatch, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RequiredBatch, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div>
                        <label for="Name">Required Experience</label>
                        <div class="input-container">

                            @Html.EditorFor(model => model.RequiredExperience, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RequiredExperience, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div>
                        <label for="Name">Description</label>
                        <div class="input-container">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div>
                        <label for="Name">SSC Marks</label>
                        <div class="input-container">
                            @Html.EditorFor(model => model.SSCMarks, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SSCMarks, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div>
                        <label for="Name">HSC Marks</label>
                        <div class="input-container">

                            @Html.EditorFor(model => model.HSCMarks, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HSCMarks, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div>
                        <label for="Name">UG Marks</label>
                        <div class="input-container">
                            @Html.EditorFor(model => model.UGMarks, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UGMarks, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="submit-btn-container">
                    <input type="submit" value="Submit" name="submit" id="submit" />
                </div>
            }

        </div>
    </div>
</body>

